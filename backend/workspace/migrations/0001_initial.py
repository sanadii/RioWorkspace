# Generated by Django 4.2.3 on 2024-02-05 12:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('settings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('match_resources', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'appointment_service',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('general_misc', models.CharField(max_length=100)),
                ('tax', models.CharField(default='Not applicable', max_length=100)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed')], max_length=10)),
            ],
            options={
                'db_table': 'service_discount',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sku', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('tax', models.CharField(default='Not applicable', max_length=100)),
                ('price_includes_tax', models.BooleanField(default=False)),
                ('validity_months', models.PositiveIntegerField(default=1)),
                ('redemption_start_date', models.DateField(blank=True, null=True)),
                ('redemption_end_date', models.DateField(blank=True, null=True)),
                ('send_email_before_expiry', models.BooleanField(default=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='package_photos/')),
            ],
            options={
                'db_table': 'service_package',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('minimize_switching', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('duration', models.PositiveIntegerField(default=30)),
                ('service_colour', models.CharField(default='Choose a color', max_length=100)),
                ('resources_required', models.BooleanField(default=False)),
                ('online_booking', models.BooleanField(default=False)),
                ('optional_booking_question', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'service_category',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('sms_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('normal_working_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('online_booking_interval', models.PositiveIntegerField(default=15)),
                ('reset_online_booking_time_after_break', models.BooleanField(default=True)),
                ('monday_working_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('tuesday_working_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('wednesday_working_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('thursday_working_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('friday_working_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('saturday_working_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('sunday_working_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('working_on_sunday', models.BooleanField(default=True)),
                ('online_booking_enabled', models.BooleanField(default=True)),
                ('show_on_mini_website', models.BooleanField(default=True)),
                ('alias_nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_number_type', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('message_for_confirmation_reminder_emails', models.TextField(blank=True, null=True)),
                ('calendar_sync_enabled', models.BooleanField(default=False)),
                ('services', models.ManyToManyField(related_name='staff_members', to='workspace.service')),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.staff')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.appointmentservice')),
            ],
            options={
                'db_table': 'service_provider',
            },
        ),
        migrations.AddField(
            model_name='service',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.servicecategory'),
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('cash', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('credit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('link', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('others', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField()),
                ('is_closed', models.BooleanField(default=False)),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='daily_revenue_status_choices', to='settings.optionchoices')),
            ],
            options={
                'db_table': 'finance_revenue',
            },
        ),
        migrations.CreateModel(
            name='ResourceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='workspace.resource')),
            ],
        ),
        migrations.CreateModel(
            name='PackageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limit', models.PositiveIntegerField(default=0)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.package')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.service')),
            ],
            options={
                'db_table': 'service_package_item',
            },
        ),
        migrations.AddField(
            model_name='package',
            name='items',
            field=models.ManyToManyField(through='workspace.PackageItem', to='workspace.service'),
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField()),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses_category_choices', to='settings.optionchoices')),
                ('paid_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses_paid_by_choices', to='settings.optionchoices')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses_status_choices', to='settings.optionchoices')),
            ],
            options={
                'db_table': 'finance_expense',
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.client')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.staff')),
            ],
            options={
                'db_table': 'finance_comission',
            },
        ),
        migrations.AddField(
            model_name='appointmentservice',
            name='resources',
            field=models.ManyToManyField(blank=True, to='workspace.resourceitem'),
        ),
        migrations.AddField(
            model_name='appointmentservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.service'),
        ),
        migrations.AddField(
            model_name='appointmentservice',
            name='staff_member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.staff'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField()),
                ('subject', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('category_color', models.CharField(max_length=100)),
                ('is_all_day', models.BooleanField(default=False)),
                ('recurrence_rule', models.CharField(blank=True, max_length=255, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.client')),
                ('services', models.ManyToManyField(to='workspace.appointmentservice')),
                ('staff_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workspace.staff')),
            ],
            options={
                'db_table': 'appointment',
            },
        ),
    ]
